// <auto-generated />
using System;
using EO_S20_TestBooking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EO_S20_TestBooking.Migrations
{
    [DbContext(typeof(BookingDbContext))]
    [Migration("20211217215550_Update")]
    partial class Update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EO_S20_TestBooking.Models.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ssn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e9666c42-fa0d-4599-9662-bc04a8fcb747"),
                            Date = new DateTime(2021, 12, 18, 12, 20, 0, 0, DateTimeKind.Unspecified),
                            LocationId = new Guid("7457c1b3-b667-4f09-abd4-f706c9c4493b"),
                            Ssn = "1001001000"
                        },
                        new
                        {
                            Id = new Guid("ae020899-f670-4552-8c57-0321a42b02d0"),
                            Date = new DateTime(2021, 12, 18, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            LocationId = new Guid("7457c1b3-b667-4f09-abd4-f706c9c4493b"),
                            Ssn = "1001001001"
                        },
                        new
                        {
                            Id = new Guid("a40d6823-0bff-4775-9541-d74ba6880544"),
                            Date = new DateTime(2021, 12, 19, 12, 40, 0, 0, DateTimeKind.Unspecified),
                            LocationId = new Guid("7457c1b3-b667-4f09-abd4-f706c9c4493b"),
                            Ssn = "1001001002"
                        },
                        new
                        {
                            Id = new Guid("ab159e72-d102-4d0d-8066-a1df11f036ec"),
                            Date = new DateTime(2021, 12, 19, 12, 50, 0, 0, DateTimeKind.Unspecified),
                            LocationId = new Guid("7457c1b3-b667-4f09-abd4-f706c9c4493b"),
                            Ssn = "1001001003"
                        },
                        new
                        {
                            Id = new Guid("5d9aa45d-8ced-4811-945f-1bbf59760790"),
                            Date = new DateTime(2021, 12, 18, 12, 20, 0, 0, DateTimeKind.Unspecified),
                            LocationId = new Guid("86cdb948-afe1-495a-841a-4b024583f730"),
                            Ssn = "1001001000"
                        },
                        new
                        {
                            Id = new Guid("ef7d992c-6cd5-4d02-9272-5a908bcf607f"),
                            Date = new DateTime(2021, 12, 18, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            LocationId = new Guid("86cdb948-afe1-495a-841a-4b024583f730"),
                            Ssn = "1001001001"
                        },
                        new
                        {
                            Id = new Guid("527fb9ed-a4a3-4261-ab10-5e09408969af"),
                            Date = new DateTime(2021, 12, 18, 12, 40, 0, 0, DateTimeKind.Unspecified),
                            LocationId = new Guid("a89881fe-5a24-4875-bd70-3e5475e6f3fb"),
                            Ssn = "1001001002"
                        },
                        new
                        {
                            Id = new Guid("e7225b00-a04f-43ea-bbff-a7667023bc39"),
                            Date = new DateTime(2021, 12, 19, 12, 50, 0, 0, DateTimeKind.Unspecified),
                            LocationId = new Guid("a89881fe-5a24-4875-bd70-3e5475e6f3fb"),
                            Ssn = "1001001003"
                        });
                });

            modelBuilder.Entity("EO_S20_TestBooking.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7457c1b3-b667-4f09-abd4-f706c9c4493b"),
                            Address = "Paludan mullersvej 24, 8200 Aarhus N"
                        },
                        new
                        {
                            Id = new Guid("86cdb948-afe1-495a-841a-4b024583f730"),
                            Address = "Finlandsgade 67, 8200 Aarhus N"
                        },
                        new
                        {
                            Id = new Guid("a89881fe-5a24-4875-bd70-3e5475e6f3fb"),
                            Address = "Møllegårdsvej 1, 8200 Aarhus N"
                        });
                });

            modelBuilder.Entity("EO_S20_TestBooking.Models.Appointment", b =>
                {
                    b.HasOne("EO_S20_TestBooking.Models.Location", "Location")
                        .WithMany("Appointments")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("EO_S20_TestBooking.Models.Location", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
